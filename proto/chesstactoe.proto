syntax="proto3";
package chesstactoe;

service Game {
  rpc MovePiece(MovePieceRequest) returns (MovePieceResponse);
  rpc Join(JoinRequest) returns (stream JoinResponse);
  rpc SubscribeBoard(SubscribeBoardRequest) returns (stream SubscribeBoardResponse);
  rpc TakeBack(TakeBackRequest) returns (TakeBackResponse);
}

message TakeBackResponse {}

message JoinRequest {}

message TakeBackRequest {
  string uuid = 1;
  bool isResponse = 2;
  bool accepted = 3;
}

message JoinResponse {
  enum GameStatus {
    READY = 0;
    NOT_READY = 1;
  }

  GameStatus status = 1;
  string uuid = 2;
}

message SubscribeBoardRequest {
  string uuid = 1;
}

message SubscribeBoardResponse {
  Color color = 1;
  TicTacToe game = 2;
  MidGameRequest request = 3;
}

message Request {
  Color requestee = 1;
}

message MidGameRequest {
  Request takeback = 1;
  Request draw = 2;
}

message MovePieceRequest {
  uint32 board = 1;
  string alg = 2;
  string uuid = 3;
}

enum MoveResult {
  RESULT_ERROR = 0;
  RESULT_ILLEGAL = 1;
  RESULT_SUCCESSFUL = 2;
}

message Chess {
  oneof endResult {
    Color color = 1;
    bool draw = 2;
    bool none = 3;
  };
  string FEN = 4;
}

message TicTacToe {
  repeated Chess chesses = 1;
  Color next = 2;
  string lastMove = 3;
}

enum Color {
  WHITE = 0;
  BLACK = 1;
}

message MovePieceResponse {
  MoveResult successful = 1;
}